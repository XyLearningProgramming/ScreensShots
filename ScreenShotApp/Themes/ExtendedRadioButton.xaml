<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:n="clr-namespace:ScreenShotApp.Controls">

	<!--ImageRadioButton • Text-->
	<Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type n:ExtendedRadioButton}">
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource Element.Foreground}"/>
		<Setter Property="Padding" Value="3,1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource Style.FocusVisual.NoMargin}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type n:ExtendedRadioButton}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1" Padding="{TemplateBinding Padding}">
						<Grid MinHeight="{TemplateBinding MinHeight}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<Border Grid.Row="0" Grid.Column="0" Background="{TemplateBinding Icon}" Margin="2,0" Opacity="{DynamicResource Element.Opacity}"
                                    Height="{TemplateBinding ContentHeight}" Width="{TemplateBinding ContentWidth}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

							<TextBlock Grid.Column="1" MaxWidth="{Binding Path=ActualWidth,RelativeSource={RelativeSource TemplatedParent}}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                       VerticalAlignment="Center" Text="{TemplateBinding Text}" 
                                       TextWrapping="{TemplateBinding TextWrapping}"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsChecked" Value="True"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>

				<MultiTrigger.Setters>
					<Setter Property="BorderBrush" Value="{DynamicResource Element.Border.Pressed}"/>
					<Setter Property="Background" Value="{DynamicResource Element.Background.Pressed}"/>
				</MultiTrigger.Setters>
			</MultiTrigger>

			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="{DynamicResource Element.Background.Checked}"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource Element.Background.Hover}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource Element.Background.Pressed}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--ImageRadioButton • No Text-->
	<Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type n:ExtendedRadioButton}" x:Key="Style.ImageRadioButton.NoText">
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource Style.FocusVisual.NoMargin}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type n:ExtendedRadioButton}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
						<Grid MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
							<Border Background="{TemplateBinding Icon}" Margin="2,0" Opacity="{DynamicResource Element.Opacity}"
                                    Height="{TemplateBinding ContentHeight}" Width="{TemplateBinding ContentWidth}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsChecked" Value="True"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="BorderBrush" Value="{DynamicResource Element.Border.Pressed}"/>
					<Setter Property="Background" Value="{DynamicResource Element.Background.Pressed}"/>
				</MultiTrigger.Setters>
			</MultiTrigger>

			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="{DynamicResource Element.Background.Checked}"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource Element.Background.Hover}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource Element.Background.Pressed}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>