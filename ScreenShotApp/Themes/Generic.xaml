<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localctrl="clr-namespace:ScreenShotApp.Controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/ScreenShotApp;component/Themes/ExtendedButton.xaml">
		</ResourceDictionary>
		<ResourceDictionary Source="pack://application:,,,/ScreenShotApp;component/Themes/ExtendedRadioButton.xaml">
		</ResourceDictionary>
		<ResourceDictionary Source="pack://application:,,,/ScreenShotApp;component/Themes/KeyBox.xaml">
		</ResourceDictionary>
		<ResourceDictionary>
			<Style x:Key="Style.FocusVisual.NoMargin">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Border>
								<Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource Element.Foreground}" StrokeThickness="1" StrokeDashArray="1,2"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--ScrollViewer-->
			<Style TargetType="{x:Type ScrollViewer}">
				<!--<Setter Property="PanningRatio" Value="0.01"/>
                <Setter Property="PanningDeceleration" Value="0.1"/>
                <Setter Property="CanContentScroll" Value="True"/>-->

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid x:Name="Grid" Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<ScrollContentPresenter Grid.Row="0" Grid.Column="0" x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" 
                                                        CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>

								<ScrollBar Grid.Row="0" Grid.Column="1" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>

								<Rectangle Grid.Row="1" Grid.Column="1" x:Name="Corner" Fill="{DynamicResource Element.Background.Back}"/>

								<ScrollBar Grid.Row="1" Grid.Column="0" x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" 
                                           Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
							</Grid>

							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Corner" Property="Opacity" Value="0.6"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--Expander styles-->
			<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
			<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
			<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
			<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>

			<Style x:Key="ExpanderHeaderFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Border>
								<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
				<Setter Property="Padding" Value="0"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
								<Grid SnapsToDevicePixels="False">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
										<RowDefinition Height="19"/>
									</Grid.RowDefinitions>

									<Label Grid.Row="0" Content="{TemplateBinding Content}" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>

									<Rectangle Grid.Row="1" x:Name="HorizontalRectangle" MinHeight="1" Fill="#FFE0E3E6" 
                                           Height="Auto" HorizontalAlignment="Center" Margin="3,0,3,0"/>

									<Path Grid.Row="2" x:Name="ArrowPath" Data="M 1,1  L 4.5,4.5  L 1,8" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                                      Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Data" TargetName="ArrowPath" Value="M 4.5,1  L 1,4.5  L 4.5,8"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Cursor" Value="Hand"/>
									<Setter Property="Background" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Background" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Stroke" TargetName="ArrowPath" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
				<Setter Property="Padding" Value="0"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
								<Grid SnapsToDevicePixels="False">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
										<RowDefinition Height="19"/>
									</Grid.RowDefinitions>

									<Label Grid.Row="0" Content="{TemplateBinding Content}" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>

									<Rectangle Grid.Row="1" x:Name="HorizontalRectangle" MinHeight="1" Fill="#FFE0E3E6" 
                                           Height="Auto" HorizontalAlignment="Center" Margin="3,0,3,0"/>

									<Path Grid.Row="2" x:Name="ArrowPath" Data="M 4.5,1  L 1,4.5  L 4.5,8" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                                      Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Data" TargetName="ArrowPath" Value="M 1,1  L 4.5,4.5  L 1,8"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Cursor" Value="Hand"/>
									<Setter Property="Background" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Background" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Stroke" TargetName="ArrowPath" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
				<Setter Property="Height" Value="27"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
								<Grid SnapsToDevicePixels="False">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="19"/>
									</Grid.ColumnDefinitions>

									<Label Grid.Column="0" Content="{TemplateBinding Content}" Padding="3" Foreground="{TemplateBinding Foreground}"
                                           VerticalContentAlignment="Center"/>

									<Rectangle Grid.Column="1" x:Name="HorizontalRectangle" MinHeight="1" Fill="#FFE0E3E6" 
                                               Height="Auto" VerticalAlignment="Center" Margin="3,0,3,0"/>

									<Path Grid.Column="2" x:Name="ArrowPath" Data="M 1,4.5 L 4.5,1 L 8,4.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                                          Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Data" TargetName="ArrowPath" Value="M 1,1.5 L 4.5,5 L 8,1.5"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Cursor" Value="Hand"/>
									<Setter Property="Background" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Background" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Stroke" TargetName="ArrowPath" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
				<Setter Property="Height" Value="27"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
								<Grid SnapsToDevicePixels="False">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="19"/>
									</Grid.ColumnDefinitions>

									<Label Grid.Column="0" Content="{TemplateBinding Content}" Padding="3" Foreground="{TemplateBinding Foreground}"
                                           VerticalContentAlignment="Center"/>

									<Rectangle Grid.Column="1" x:Name="HorizontalRectangle" MinHeight="1" Fill="#FFE0E3E6" 
                                               Height="Auto" VerticalAlignment="Center" Margin="3,0,3,0"/>

									<Path Grid.Column="2" x:Name="ArrowPath" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" 
                                          Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Data" TargetName="ArrowPath" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Cursor" Value="Hand"/>
									<Setter Property="Background" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Stroke" TargetName="HorizontalRectangle" Value="#FFB3B5B8"/>
									<Setter Property="Background" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
									<Setter Property="Stroke" TargetName="ArrowPath" Value="Black"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Stroke" TargetName="ArrowPath" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ExpanderModernDefaultStyle" TargetType="{x:Type Expander}">
				<Setter Property="Foreground" Value="Black"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
				<Setter Property="VerticalContentAlignment" Value="Stretch"/>
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="0"/>

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Expander}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
								<DockPanel>
									<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                                  Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" 
                                                  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" 
                                                  FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0"
                                                  Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" 
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

									<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</DockPanel>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded" Value="True">
									<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
								</Trigger>
								<Trigger Property="ExpandDirection" Value="Right">
									<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
									<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
									<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
								</Trigger>
								<Trigger Property="ExpandDirection" Value="Up">
									<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
									<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
									<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
								</Trigger>
								<Trigger Property="ExpandDirection" Value="Left">
									<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
									<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
									<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>
</ResourceDictionary>
